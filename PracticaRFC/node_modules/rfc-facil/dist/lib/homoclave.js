"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var map = {
    ' ': '00',
    '0': '00',
    '1': '01',
    '2': '02',
    '3': '03',
    '4': '04',
    '5': '05',
    '6': '06',
    '7': '07',
    '8': '08',
    '9': '09',
    '&': '10',
    A: '11',
    B: '12',
    C: '13',
    D: '14',
    E: '15',
    F: '16',
    G: '17',
    H: '18',
    I: '19',
    J: '21',
    K: '22',
    L: '23',
    M: '24',
    N: '25',
    O: '26',
    P: '27',
    Q: '28',
    R: '29',
    S: '32',
    T: '33',
    U: '34',
    V: '35',
    W: '36',
    X: '37',
    Y: '38',
    Z: '39',
    Ñ: '40'
};
var digits = '123456789ABCDEFGHIJKLMNPQRSTUVWXYZ';
function calculate(fullName) {
    var mappedFullName = '0' +
        normalize(fullName)
            .split('')
            .map(mapCharacterToTwoDigitsCode)
            .join('');
    var sum = sumPairsOfDigits(mappedFullName);
    var lastThreeDigits = sum % 1000;
    var quo = lastThreeDigits / 34;
    var reminder = lastThreeDigits % 34;
    return digits.charAt(quo) + digits.charAt(reminder);
}
exports.default = calculate;
// remove accents without removing the Ñ (u0303)
// and remove special characters: .'-,
function normalize(input) {
    return input
        .toUpperCase()
        .normalize('NFD')
        .replace(/[\u0300-\u0302]/g, '')
        .replace(/[\u0304-\u036f]/g, '')
        .replace(/N\u0303/g, 'Ñ')
        .replace(/[-\.',]/g, ''); // remove .'-,
}
function sumPairsOfDigits(input) {
    var sum = 0;
    for (var i = 0; i < input.length - 1; i++) {
        var firstPair = parseInt(input.substring(i, i + 2), 10);
        var secondPair = parseInt(input.substring(i + 1, i + 2), 10);
        sum += firstPair * secondPair;
    }
    return sum;
}
function mapCharacterToTwoDigitsCode(c) {
    var m = map[c];
    if (!m) {
        throw Error("No two-digit code mapping for char " + c);
    }
    return m;
}
//# sourceMappingURL=homoclave.js.map